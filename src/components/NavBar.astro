---
const navItems = [
  { label: "Inicio", href: "/" },
  { label: "Beneficios", href: "/#beneficios" },
  { label: "Funcionalidades", href: "/#funcionalidades" },
  { label: "Precio", href: "/#precio" },
  { label: "Testimonios", href: "/#testimonios" },
];

const MenuIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-6 w-6"><line x1="3" y1="12" x2="21" y2="12"></line><line x1="3" y1="6" x2="21" y2="6"></line><line x1="3" y1="18" x2="21" y2="18"></line></svg>`;
const XIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-6 w-6"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>`;
---

<header
  id="main-header"
  class="fixed top-0 left-0 right-0 z-50 transition-all duration-300 bg-emerald-500 py-4"
>
  <div class="container mx-auto flex items-center justify-between px-4">
    <a href="/" class="flex items-center text-2xl font-bold font-poppins">
      <span class="text-white text-4xl">Vende</span>
      <span class="text-[#3D5AFE] text-4xl">Pe</span>
    </a>

    <div class="flex items-center gap-4">
      <nav class="hidden md:flex items-center gap-8">
        {
          navItems.map((item) => (
            <a
              href={item.href}
              class="font-medium text-[20px] text-white hover:text-yellow-300 transition-colors"
            >
              {item.label}
            </a>
          ))
        }
      </nav>

      <a
        href="https://wa.me/51999115320?text=Hola%20me%20gustaría%20tener%20mi%20propio%20asistente%20de%20venta%20inteligente"
        target="_blank"
        rel="noopener noreferrer"
        class="hidden md:flex items-center justify-center text-[17px] bg-white text-emerald-600 hover:bg-white/90 transition-all duration-300 shadow-md hover:shadow-lg px-4 py-2 text-sm rounded-md font-medium"
      >
        Solicita una demo
      </a>

      <button
        type="button"
        id="open-menu-button"
        class="md:hidden text-white p-2"
        aria-label="Abrir menú"
        aria-expanded="false"
        aria-controls="mobile-menu-panel"
      >
        <Fragment set:html={MenuIcon} />
        <span class="sr-only">Abrir menú</span>
      </button>
    </div>
  </div>

  <div
    id="mobile-menu-panel"
    class="fixed inset-0 bg-black/95 z-50 flex flex-col p-6 transition-transform duration-300 transform translate-x-full md:hidden"
  >
    <div class="flex justify-between items-center mb-10">
      <a href="/" class="flex items-center text-2xl font-bold font-poppins">
          <span class="text-white">Vende</span>
          <span class="text-[#3D5AFE]">Pe</span>
        </a>
      <button
        type="button"
        id="close-menu-button"
        class="text-white p-2"
        aria-label="Cerrar menú"
      >
        <Fragment set:html={XIcon} />
        <span class="sr-only">Cerrar menú</span>
      </button>
    </div>

    <nav class="flex flex-col gap-6 text-center">
      {
        navItems.map((item) => (
          <a
            href={item.href}
            class="mobile-menu-link text-xl font-medium text-white py-2"
          >
            {item.label}
          </a>
        ))
      }
    </nav>

    <div class="mt-auto">
      <a
        href="#solicita-demo-mobile"
        id="mobile-demo-button"
        class="mobile-menu-link block w-full bg-white text-emerald-600 hover:bg-white/90 py-4 mb-20 text-lg rounded-md text-center font-medium"
      >
        Solicita una demo
      </a>
    </div>
  </div>
</header>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const header = document.getElementById("main-header");
    const mobileMenuPanel = document.getElementById("mobile-menu-panel");
    const openMenuButton = document.getElementById("open-menu-button");
    const closeMenuButton = document.getElementById("close-menu-button");
    const mobileMenuLinks = document.querySelectorAll(".mobile-menu-link");

    // Estado de scroll
    let isScrolled = false;
    const handleScroll = () => {
      if (window.scrollY > 10) {
        if (!isScrolled && header) {
          header.classList.remove("bg-emerald-500", "py-4");
          header.classList.add(
            "bg-emerald-500/95",
            "backdrop-blur-md",
            "shadow-md",
            "py-2"
          );
          isScrolled = true;
        }
      } else {
        if (isScrolled && header) {
          header.classList.remove(
            "bg-emerald-500/95",
            "backdrop-blur-md",
            "shadow-md",
            "py-2"
          );
          header.classList.add("bg-emerald-500", "py-4");
          isScrolled = false;
        }
      }
    };

    window.addEventListener("scroll", handleScroll);
    handleScroll(); // Llama una vez al cargar para establecer el estado inicial

    // Estado del menú móvil
    let isMenuOpen = false;

    function openMenu() {
      if (mobileMenuPanel && openMenuButton) {
        mobileMenuPanel.classList.remove("translate-x-full");
        mobileMenuPanel.classList.add("translate-x-0");
        openMenuButton.setAttribute("aria-expanded", "true");
        isMenuOpen = true;
        document.body.style.overflow = "hidden";
      }
    }

    function closeMenu() {
      if (mobileMenuPanel && openMenuButton) {
        mobileMenuPanel.classList.remove("translate-x-0");
        mobileMenuPanel.classList.add("translate-x-full");
        openMenuButton.setAttribute("aria-expanded", "false");
        isMenuOpen = false;
        document.body.style.overflow = "";
      }
    }

    if (openMenuButton) {
      openMenuButton.addEventListener("click", openMenu);
    }

    if (closeMenuButton) {
      closeMenuButton.addEventListener("click", closeMenu);
    }

    mobileMenuLinks.forEach((link) => {
      link.addEventListener("click", closeMenu);
    });

    document.addEventListener("keydown", (event) => {
      if (event.key === "Escape" && isMenuOpen) {
        closeMenu();
      }
    });
  });
</script>
