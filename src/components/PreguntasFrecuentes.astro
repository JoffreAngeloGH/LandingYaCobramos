---
import { Image } from "astro:assets";
---

<section class="py-24 px-4 bg-gray-900">
  <div class="container mx-auto max-w-3xl">
    <div class="text-center mb-16 reveal">
      <h2 class="text-3xl md:text-5xl font-bold mb-4 font-poppins text-white">
        Preguntas Frecuentes
      </h2>
      <p class="text-gray-400 text-lg max-w-3xl mx-auto">
        Todo lo que necesitas saber sobre VendePe y cómo puede ayudar en tu
        negocio
      </p>
    </div>

    <div class="reveal" data-delay="100">
      <div class="space-y-4">
        {
          [
            {
              question: "¿Necesito conocimientos técnicos para usar VendePe?",
              answer:
                "No, no necesitas tener conocimientos técnicos. VendePe está diseñado para ser fácil de usar y adaptarse a distintos tipos de negocios como e-commerce, tiendas minoristas, servicios profesionales, restaurantes y agencias. Si tus clientes se comunican por WhatsApp para hacer consultas o realizar compras, VendePe te ayuda a automatizar y escalar esas interacciones sin complicaciones.",
            },
            {
              question:
                "¿Que diferencia a VendePE en relación a los competidores?",
              answer:
                "VendePe combina inteligencia artificial con automatización comercial para ofrecerte una solución integral: atrae clientes, responde automáticamente, cierra ventas y emite facturas sin intervención manual. Es la única herramienta que une ventas inteligentes, gestión comercial y facturación automática en una sola plataforma para ayudarte a crecer más rápido y con menos esfuerzo.",
            },
            {
              question: "¿Puedo personalizar las respuestas automáticas?",
              answer:
                "Sí, VendePe te permite personalizar completamente las respuestas automáticas según tu marca y tipo de negocio. Puedes crear flujos de conversación específicos para diferentes productos o servicios, adaptándose a las necesidades de tus clientes.",
            },
            {
              question: "¿Qué pasa si necesito ayuda o soporte técnico?",
              answer:
                "Ofrecemos soporte técnico por chat, correo electrónico y llamada telefónica. Nuestro equipo está disponible para ayudarte con cualquier duda o problema que puedas tener. Además, contamos con una base de conocimientos completa con tutoriales y guías paso a paso.",
            },
          ].map((faq, index) => (
            <div class="bg-gray-900 rounded-xl shadow-sm border border-gray-800 overflow-hidden accordion-item">
              <button
                class="w-full px-6 py-4 text-left font-medium text-white flex justify-between items-center"
                aria-expanded="false"
                aria-controls={`accordion-content-${index}`}
              >
                <span>{faq.question}</span>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="20"
                  height="20"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="accordion-icon transition-transform duration-200"
                >
                  <path d="m6 9 6 6 6-6" />
                </svg>
              </button>
              <div
                id={`accordion-content-${index}`}
                class="px-6 pb-4 pt-0 text-gray-400 accordion-content "
              >
                <p class="pt-2 text-white/90">{faq.answer}</p>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>

<style>
  /* ... (tu CSS existente para el header y otras secciones) ... */

  /* Estilos para el contenido del acordeón (respuesta) */
  .accordion-content {
    max-height: 0; /* Por defecto, la altura máxima es 0 (cerrado) */
    overflow: hidden; /* Oculta cualquier contenido que exceda la altura */
    opacity: 0; /* Inicia con opacidad 0 para una transición más suave */
    /* Define la transición para max-height y opacity */
    transition:
      max-height 0.5s ease-in-out,
      opacity 0.5s ease-in-out,
      padding 0.5s ease-in-out;
  }

  /* Clase que se añade cuando el acordeón está abierto */
  .accordion-content.is-open {
    max-height: 500px; /* Un valor lo suficientemente grande para contener la respuesta más larga */
    opacity: 1; /* Hace el contenido visible */
    padding-top: 1rem; /* Añade un poco de padding superior cuando está abierto, si `pt-0` lo permite */
  }

  /* Estilos para el ícono de rotación (ya lo tienes, solo verifico la transición) */
  .accordion-icon {
    transition: transform 0.3s ease-in-out; /* Asegura una rotación suave */
  }

  .accordion-icon.rotate-180 {
    transform: rotate(180deg);
  }

  /* ... (tus media queries existentes) ... */
</style>

<script>
  function setupAccordion() {
    const accordionItems = document.querySelectorAll(".accordion-item");

    accordionItems.forEach((item) => {
      const button = item.querySelector("button");
      const content = item.querySelector(".accordion-content");
      const icon = item.querySelector(".accordion-icon");

      if (button && content && icon) {
        button.addEventListener("click", () => {
          const expanded = button.getAttribute("aria-expanded") === "true";

          // Cerrar todos los demás acordeones
          accordionItems.forEach((otherItem) => {
            const otherButton = otherItem.querySelector("button");
            const otherContent = otherItem.querySelector(".accordion-content");
            const otherIcon = otherItem.querySelector(".accordion-icon");

            if (
              otherItem !== item &&
              otherButton &&
              otherContent &&
              otherIcon
            ) {
              otherButton.setAttribute("aria-expanded", "false");
              otherContent.classList.remove("is-open"); // Usar remove 'is-open'
              otherIcon.classList.remove("rotate-180");
            }
          });

          // Alternar el estado del acordeón actual
          button.setAttribute("aria-expanded", (!expanded).toString());
          content.classList.toggle("is-open"); // Usar toggle 'is-open'
          icon.classList.toggle("rotate-180");
        });
      }
    });
  }

  // Ejecutar cuando el DOM esté listo
  document.addEventListener("DOMContentLoaded", setupAccordion);
  // También ejecutar cuando cambie la página con ViewTransitions (si estás usando Astro)
  document.addEventListener("astro:page-load", setupAccordion);
</script>
